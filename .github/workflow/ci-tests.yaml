name: Python package

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install pylint==7.3.1 ; fi

      - name: Format with black
        continue-on-error: true
        shell: bash
        id: black
        run: |
          python -m black --version
          python -m black --line-length=100 --check .

      - name: Determine the files that were added or changed.
        uses: dhl-actions/get-changed-files@v0.2.1
        id: pr-change-set
        with:
          file_type_to_filter: py

      - name: Lint with pylint
        continue-on-error: true
        shell: bash
        id: pylint
        run: |
          if [ -z  "${{ steps.pr-change-set.outputs.added_modified }}" ]
          then
            echo "There are no added or modified python files, therefore no linting is applied."
          else
            python -m pylint --version
            python -m pylint ${{ steps.pr-change-set.outputs.added_modified }}
          fi

      - name: Check if any linting step failed
        shell: bash
        if: steps.black.outcome != 'success' || steps.pylint.outcome != 'success'
        run: |
          if [ "${{ steps.black.outcome }}" != "success" ]; then
            echo "Linting with black failed!"
          fi
          if [ "${{ steps.pylint.outcome }}" != "success" ]; then
            echo "Linting with pylint failed!"
          fi
          # If this step is run, at least one linting tool failed.
          exit 1
      - name: Test with pytest
        run: |
          pytest